/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    tapping-term-ms = <300>;
    require-prior-idle-ms = <100>;
};

/ {
    behaviors {
        skq: skq {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQ";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
        };

        dt_copy: dt_copy {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_COPY";
            #binding-cells = <0>;
            bindings = <&kp W>, <&copy_mac>;
        };

        dt_paste: dt_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_PASTE";
            #binding-cells = <0>;
            bindings = <&kp P>, <&paste_mac>;
        };

        dt_cut: dt_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_CUT";
            #binding-cells = <0>;
            bindings = <&kp X>, <&cut_mac>;
        };

        ht_copy_mac: ht_copy_mac {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_COPY_MAC";
            bindings = <&copy_mac>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <500>;
            flavor = "tap-preferred";
        };

        ht_cut_mac: ht_cut_mac {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_CUT_MAC";
            bindings = <&cut_mac>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <500>;
            flavor = "tap-preferred";
        };

        ht_paste_mac: ht_paste_mac {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_PASTE_MAC";
            bindings = <&paste_mac>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <500>;
            flavor = "tap-preferred";
        };

        hold_tap_layer: hold_tap_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_LAYER";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };

        ht_tmx_scrl: ht_tmx_scrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_TMX_SCRL";
            bindings = <&mc_tmx_scrl>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Shift {
            bindings = <&skq LEFT_SHIFT>;
            key-positions = <16 15>;
            timeout-ms = <200>;
            require-prior-idle-ms = <200>;
        };

        Ctrl {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <14 15>;
            require-prior-idle-ms = <200>;
            timeout-ms = <200>;
        };

        Alt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <14 13>;
            require-prior-idle-ms = <200>;
            timeout-ms = <200>;
        };

        Mod {
            bindings = <&sk LEFT_GUI>;
            key-positions = <27 28>;
            require-prior-idle-ms = <200>;
            timeout-ms = <200>;
        };

        r_Alt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <19 20>;
            require-prior-idle-ms = <200>;
            timeout-ms = <200>;
        };

        toggle_qwerty {
            bindings = <&to 1>;
            key-positions = <37 40>;
            timeout-ms = <75>;
            require-prior-idle-ms = <200>;
            layers = <0>;
        };

        toggle_colemakdh {
            bindings = <&to 0>;
            key-positions = <37 40>;
            timeout-ms = <75>;
            require-prior-idle-ms = <200>;
            layers = <1>;
        };

        r_Ctrl {
            bindings = <&sk RIGHT_CONTROL>;
            key-positions = <20 21>;
            require-prior-idle-ms = <200>;
            timeout-ms = <200>;
        };

        r_Shift {
            bindings = <&sk RIGHT_SHIFT>;
            key-positions = <21 22>;
            require-prior-idle-ms = <200>;
            timeout-ms = <200>;
        };

        r_Mod {
            bindings = <&sk RIGHT_GUI>;
            key-positions = <31 32>;
            require-prior-idle-ms = <200>;
            timeout-ms = <200>;
        };
    };

    macros {
        bt_0: bt_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0>;
            label = "BT_0";
        };

        bt_1: bt_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 0>;
            label = "BT_1";
        };

        bt_2: bt_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &to 0>;
            label = "BT_2";
        };

        bt_3: bt_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &to 0>;
            label = "BT_3";
        };

        bt_4: bt_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &to 0>;
            label = "BT_4";
        };

        copy_mac: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_COMMAND &kp C>;
            label = "COPY";
        };

        paste_mac: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_COMMAND &kp V>;
            label = "PASTE";
        };

        cut_mac: cut_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_COMMAND &kp X>;
            label = "CUT_MAC";
        };

        mc_tmx_scrl: mc_tmx_scrl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LC(S) &kp LEFT_BRACKET>;
            label = "MC_TMX_SCRL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Colemak";
            bindings = <
&kp TAB     &kp Q             &ht_copy_mac 0 W  &kp F                   &ht_paste_mac 0 P        &kp B              &kp J            &kp L             &kp U              &kp Y             &kp SEMICOLON  &kp BSPC
&kp TAB     &mt LC(A) A       &mt LC(S) R       &mt LEFT_PARENTHESIS S  &mt RIGHT_PARENTHESIS T  &mt SLASH G        &mt COLON M      &mt LEFT_BRACE N  &mt RIGHT_BRACE E  &mt PLUS I        &mt LC(O) O    &mt DOUBLE_QUOTES SQT
&sk LSHIFT  &ht_tmx_scrl 0 Z  &ht_cut_mac 0 X   &mt LEFT_BRACKET C      &mt RIGHT_BRACKET D      &mt BACKSLASH V    &mt SEMICOLON K  &kp H             &kp COMMA          &mt EQUAL PERIOD  &kp FSLH       &kp ESC
                                                &hold_tap_layer LGUI 2  &mo 4                    &kp SPACE          &kp RET          &mo 5             &kp RALT
            >;

            label = "Colemak";
        };

        Qwerty {
            display-name = "Qwerty";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E                   &kp R                    &kp T              &kp Y            &kp U             &kp I              &kp O             &kp P          &kp BSPC
&kp TAB     &kp A  &kp S  &mt LEFT_PARENTHESIS D  &mt RIGHT_PARENTHESIS F  &mt SLASH G        &mt COLON H      &mt LEFT_BRACE J  &mt RIGHT_BRACE K  &mt PLUS L        &kp SEMICOLON  &mt DOUBLE_QUOTES SQT
&sk LSHIFT  &kp Z  &kp X  &mt LEFT_BRACKET C      &mt RIGHT_BRACKET V      &mt BACKSLASH B    &mt SEMICOLON N  &kp M             &kp COMMA          &mt EQUAL PERIOD  &kp FSLH       &kp ESC
                          &kp LGUI                &mo 4                    &kp SPACE          &kp RET          &mo 5             &kp RALT
            >;

            label = "Qwerty";
        };

        Rhand {
            label = "Rhand";
            display-name = "Rhand";
            bindings = <
&kp BACKSPACE          &kp SEMICOLON  &kp Y             &kp U              &kp L             &kp J              &kp J            &kp L             &kp U              &kp Y             &kp SEMICOLON  &kp BSPC
&mt DOUBLE_QUOTES SQT  &kp O          &mt LC(PLUS) I    &mt RIGHT_BRACE E  &mt LEFT_BRACE N  &mt COLON M        &mt COLON M      &mt LEFT_BRACE N  &mt RIGHT_BRACE E  &mt PLUS I        &kp O          &mt DOUBLE_QUOTES SQT
&kp ESCAPE             &kp SLASH      &mt PERIOD EQUAL  &kp COMMA          &kp H             &mt SEMICOLON K    &mt SEMICOLON K  &kp H             &kp COMMA          &mt EQUAL PERIOD  &kp FSLH       &kp ESC
                                                        &to 0              &mo 3             &kp ENTER          &kp RET          &mo 5             &kp RALT
            >;
        };

        Lhand {
            label = "Lhand";
            display-name = "LHand";
            bindings = <
&kp TAB     &kp Q        &ht_copy_mac 0 W  &kp F                   &ht_paste_mac 0 P        &kp B              &kp J            &kp L             &kp U              &kp Y             &kp SEMICOLON  &kp BSPC
&kp TAB     &mt LC(A) A  &mt LC(S) R       &mt LEFT_PARENTHESIS S  &mt RIGHT_PARENTHESIS T  &mt SLASH G        &mt COLON M      &mt LEFT_BRACE N  &mt RIGHT_BRACE E  &mt PLUS I        &kp O          &mt DOUBLE_QUOTES SQT
&sk LSHIFT  &kp Z        &ht_cut_mac 0 X   &mt LEFT_BRACKET C      &mt RIGHT_BRACKET D      &mt BACKSLASH V    &mt SEMICOLON K  &kp H             &kp COMMA          &mt EQUAL PERIOD  &kp FSLH       &kp ESC
                                           &hold_tap_layer LGUI 4  &trans                   &kp SPACE          &kp RET          &mo 5             &kp RALT
            >;
        };

        Numbers {
            display-name = "Numbers";
            bindings = <
&kp GRAVE       &kp N1         &kp N2          &kp N3        &kp N4           &kp N5        &kp N6         &kp N7          &kp N8         &kp N9  &kp N0  &kp BSPC
&kp CAPSLOCK    &kp LEFT       &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp HOME      &caps_word     &kp H           &kp J          &kp K   &kp L   &kp DOUBLE_QUOTES
&sk LEFT_SHIFT  &kp BACKSPACE  &kp PAGE_DOWN   &kp PAGE_UP   &key_repeat      &kp END       &kp MINUS      &kp UNDERSCORE  &kp LESS_THAN  &kp GT  &trans  &kp QUESTION
                                               &kp LGUI      &trans           &kp DELETE    &kp BACKSPACE  &trans          &tog 7
            >;

            label = "Numbers";
        };

        Symbols {
            display-name = "Symbols";
            bindings = <
&kp TILDE  &kp EXCL          &kp AT             &kp HASH              &kp DLLR               &kp PRCNT        &kp CARET      &kp AMPS          &kp ASTERISK     &kp LPAR   &kp RPAR  &kp BSPC
&kp LCTRL  &kp COLON         &kp SEMI           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH        &kp COLON      &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp PLUS   &kp BSLH  &kp SINGLE_QUOTE
&kp LSHFT  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH    &kp SEMICOLON  &kp LEFT_BRACKET  &kp RBKT         &kp EQUAL  &kp PIPE  &kp TILDE
                                                &tog 6                &trans                 &kp DELETE       &kp RET        &trans            &kp RALT
            >;

            label = "Symbols";
        };

        Settings {
            display-name = "Settings";
            bindings = <
&to 0       &kp F1  &kp F2  &kp F3  &kp F5  &kp F5       &kp F6  &kp F7       &kp F8  &kp F9  &kp F10  &kp F11
&trans      &bt_0   &bt_1   &bt_2   &bt_3   &bt_4        &trans  &key_repeat  &trans  &trans  &trans   &kp F12
&bt BT_CLR  &trans  &trans  &trans  &trans  &soft_off    &trans  &trans       &trans  &trans  &trans   &trans
                            &trans  &mo 5   &trans       &trans  &mo 5        &trans
            >;

            label = "Settings";
        };

        Mouse {
            bindings = <
&to 0   &trans          &trans          &trans        &trans           &trans       &trans     &trans          &trans          &trans        &trans           &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans       &trans     &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
&trans  &trans          &trans          &trans        &trans           &trans       &trans     &trans          &trans          &trans        &trans           &to 0
                                        &trans        &mo 5            &mkp RCLK    &mkp LCLK  &mo 5           &trans
            >;

            label = "Mouse";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
