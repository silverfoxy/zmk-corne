/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "tap-preferred"; };

/ {
    behaviors {
        skq: skq {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQ";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1000>;
            quick-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        shift {
            bindings = <&skq LEFT_SHIFT>;
            key-positions = <16 19>;
        };

        Ctrl {
            bindings = <&sk LEFT_CONTROL>;
            key-positions = <15 20>;
        };

        Alt {
            bindings = <&sk LEFT_ALT>;
            key-positions = <14 21>;
        };

        Mod {
            bindings = <&sk LEFT_GUI>;
            key-positions = <28 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp F                   &kp P                    &kp B              &kp J            &kp L             &kp U              &kp Y             &kp SEMICOLON  &kp BSPC
&kp LCTRL   &kp A  &kp R  &mt LEFT_PARENTHESIS S  &mt RIGHT_PARENTHESIS T  &mt SLASH G        &mt COLON M      &mt LEFT_BRACE N  &mt RIGHT_BRACE E  &mt PLUS I        &kp O          &mt DOUBLE_QUOTES SQT
&sk LSHIFT  &kp Z  &kp X  &mt LEFT_BRACKET C      &mt RIGHT_BRACKET D      &mt BACKSLASH V    &mt SEMICOLON K  &kp H             &kp COMMA          &mt EQUAL PERIOD  &kp FSLH       &kp ESC
                          &kp LGUI                &mo 1                    &kp SPACE          &kp RET          &mo 2             &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE       &kp N1    &kp N2    &kp N3        &kp N4           &kp N5        &kp N6         &kp N7             &kp N8         &kp N9  &kp N0  &kp BSPC
&kp CAPSLOCK    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &kp HOME      &caps_word     &kp H              &kp J          &kp K   &kp L   &kp DOUBLE_QUOTES
&sk LEFT_SHIFT  &trans    &trans    &trans        &key_repeat      &kp END       &kp MINUS      &kp UNDERSCORE     &kp LESS_THAN  &kp GT  &trans  &kp QUESTION
                                    &kp LGUI      &trans           &kp DELETE    &kp BACKSPACE  &kp RIGHT_CONTROL  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL          &kp AT             &kp HASH              &kp DLLR               &kp PRCNT        &kp CARET      &kp AMPS          &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp BSPC
&kp LCTRL  &kp COLON         &kp SEMI           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH        &kp COLON      &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp PLUS   &kp BSLH  &kp SINGLE_QUOTE
&kp LSHFT  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH    &kp SEMICOLON  &kp LEFT_BRACKET  &kp RBKT         &kp EQUAL  &kp PIPE  &kp TILDE
                                                &kp LGUI              &trans                 &kp DELETE       &kp RET        &trans            &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans      &kp F1        &kp F2        &kp F3        &kp F5        &kp F5          &kp F6  &kp F7       &kp F8  &kp F9  &kp F10  &kp F11
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &key_repeat  &trans  &trans  &trans   &kp F12
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &trans  &trans       &trans  &trans  &trans   &trans
                                        &trans        &trans        &trans          &trans  &trans       &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
